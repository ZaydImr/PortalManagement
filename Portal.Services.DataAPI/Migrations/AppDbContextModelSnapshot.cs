// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Portal.Services.DataAPI.Data;

#nullable disable

namespace Portal.Services.DataAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("data")
                .HasAnnotation("ProductVersion", "8.0.0-preview.7.23375.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Portal.Services.DataAPI.Model.Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Department_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Department_Name");

                    b.HasKey("DepartmentID");

                    b.ToTable("Department", "data");

                    b.HasData(
                        new
                        {
                            DepartmentID = 1,
                            Name = "IT / Support"
                        },
                        new
                        {
                            DepartmentID = 2,
                            Name = "Technician"
                        },
                        new
                        {
                            DepartmentID = 3,
                            Name = "Manager"
                        });
                });

            modelBuilder.Entity("Portal.Services.DataAPI.Model.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Employee_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeID"));

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("First_Name");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Hire_Date");

                    b.Property<int>("JobTitleId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Last_Name");

                    b.Property<int>("ManagerEmployeeID")
                        .HasColumnType("int");

                    b.Property<string>("PersonalEmail")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Personal_Email");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfessionalEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Professional_Email");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeID");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("JobTitleId");

                    b.HasIndex("ManagerEmployeeID");

                    b.ToTable("Employee", "data");
                });

            modelBuilder.Entity("Portal.Services.DataAPI.Model.EmployeeBankAccount", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("RIB")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId", "RIB");

                    b.ToTable("EmployeeBankAccount", "data");
                });

            modelBuilder.Entity("Portal.Services.DataAPI.Model.EmployeeSalary", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApplyDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.HasKey("EmployeeId", "ApplyDate");

                    b.ToTable("EmployeeSalary", "data");
                });

            modelBuilder.Entity("Portal.Services.DataAPI.Model.EmployeeSkill", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("SkillId")
                        .HasColumnType("int");

                    b.Property<int>("SkillLevel")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("EmployeeSkill", "data");
                });

            modelBuilder.Entity("Portal.Services.DataAPI.Model.JobTitle", b =>
                {
                    b.Property<int>("JobTitleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Job_Title_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobTitleId"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JobTitleId");

                    b.ToTable("JobTitle", "data");
                });

            modelBuilder.Entity("Portal.Services.DataAPI.Model.PerformanceReview", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Review_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<int>("Employee_Id")
                        .HasColumnType("int");

                    b.Property<string>("Feedback")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Goals")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReviewDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SuperVisor_Id")
                        .HasColumnType("int");

                    b.HasKey("ReviewId");

                    b.HasIndex("Employee_Id");

                    b.HasIndex("SuperVisor_Id");

                    b.ToTable("PerformanceReview", "data");
                });

            modelBuilder.Entity("Portal.Services.DataAPI.Model.Skill", b =>
                {
                    b.Property<int>("SkillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Skill_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SkillId"));

                    b.HasKey("SkillId");

                    b.ToTable("Skill", "data");
                });

            modelBuilder.Entity("Portal.Services.DataAPI.Model.Employee", b =>
                {
                    b.HasOne("Portal.Services.DataAPI.Model.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Portal.Services.DataAPI.Model.JobTitle", "JobTitle")
                        .WithMany()
                        .HasForeignKey("JobTitleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Portal.Services.DataAPI.Model.Employee", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerEmployeeID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("JobTitle");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("Portal.Services.DataAPI.Model.EmployeeBankAccount", b =>
                {
                    b.HasOne("Portal.Services.DataAPI.Model.Employee", "Employee")
                        .WithMany("BankAccounts")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Portal.Services.DataAPI.Model.EmployeeSalary", b =>
                {
                    b.HasOne("Portal.Services.DataAPI.Model.Employee", "Employee")
                        .WithMany("Salaries")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Portal.Services.DataAPI.Model.EmployeeSkill", b =>
                {
                    b.HasOne("Portal.Services.DataAPI.Model.Employee", "Employee")
                        .WithMany("Skills")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Portal.Services.DataAPI.Model.Skill", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("Portal.Services.DataAPI.Model.PerformanceReview", b =>
                {
                    b.HasOne("Portal.Services.DataAPI.Model.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("Employee_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Portal.Services.DataAPI.Model.Employee", "SuperVisor")
                        .WithMany()
                        .HasForeignKey("SuperVisor_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("SuperVisor");
                });

            modelBuilder.Entity("Portal.Services.DataAPI.Model.Employee", b =>
                {
                    b.Navigation("BankAccounts");

                    b.Navigation("Salaries");

                    b.Navigation("Skills");
                });
#pragma warning restore 612, 618
        }
    }
}
